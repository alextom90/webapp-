from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ConversationHandler, ContextTypes

# –°—Ç–∞–¥—ñ—ó –¥—ñ–∞–ª–æ–≥—É
TYPE, ISSUE, NAME, PHONE = range(4)

# –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–∞—è–≤–æ–∫
clients = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –ø—Ä–∏–π–º–∞—é –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç.\n–Ø–∫–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø–æ—Ç—Ä–µ–±—É—î —Ä–µ–º–æ–Ω—Ç—É?")
    return TYPE

async def get_type(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["type"] = update.message.text
    await update.message.reply_text("–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É:")
    return ISSUE

async def get_issue(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["issue"] = update.message.text
    await update.message.reply_text("–í–∞—à–µ —ñ–º‚Äô—è:")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    user_id = update.message.from_user.id
    clients[user_id] = context.user_data.copy()

    await update.message.reply_text(
        f"–î—è–∫—É—î–º–æ, {context.user_data['name']}!\n"
        f"–ú–∏ –∑–∞–ø–∏—Å–∞–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É:\n\n"
        f"üì± –ü—Ä–∏—Å—Ç—Ä—ñ–π: {context.user_data['type']}\n"
        f"üõ† –ü—Ä–æ–±–ª–µ–º–∞: {context.user_data['issue']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}"
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token("YOUR_BOT_TOKEN_HERE").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_type)],
            ISSUE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_issue)],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel)]
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()